{"version":3,"sources":["Redux/contacts/contacts-actions.js","Redux/contacts/contacts-operations.js","Redux/contacts/contacts-selector.js","ContactList/ContactsList.js","Filter/Filter.js","Forms/AddContactForm.js","App.js","Redux/contacts/contacts-reducer.js","Redux/store.js","index.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","updateFilter","axios","defaults","baseURL","getContacts","dispatch","a","get","data","addContact","name","number","contact","post","then","catch","error","deleteContact","contactId","delete","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsList","useSelector","contactsSelectors","useDispatch","useEffect","contactsOperations","className","map","id","type","onClick","Filter","value","onChange","e","contactsActions","target","Form","useState","setName","setNumber","handleChange","event","resetForm","onSubmit","preventDefault","some","item","alert","pattern","title","required","App","createReducer","_","payload","loading","message","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","next","action","console","log","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3e4b468.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactsRequest = createAction('contacts/getContactRequest');\nexport const getContactsSuccess = createAction('contacts/getContactSuccess');\nexport const getContactsError = createAction('contacts/getContactError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactsSuccess = createAction('contacts/addContactSuccess');\nexport const addContactsError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactError');\n\nexport const updateFilter = createAction('contacts/UpdateFilter');\n","import axios from 'axios';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const getContacts = () => async dispatch => {\n  dispatch(getContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(getContactsSuccess(data));\n  } catch (error) {\n    dispatch(getContactsError(error));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactsRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactsSuccess(data)))\n      .catch(error => dispatch(addContactsError(error)));\n  };\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactsRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactsSuccess(contactId)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\n// export const getVisibleContactsOld = state => {\n//   const contacts = getItems(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'Redux/contacts';\nimport './ContactList.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"item\">\n          <span className=\"itemText\">\n            <span className=\"itemName\">{name}:</span>\n            <span className=\"itemNum\">{number}</span>\n          </span>\n\n          <button\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            className=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'Redux/contacts';\nimport './Filter.css';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"filter\">\n      <label>\n        <span className=\"filterText\">Filter</span>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(contactsActions.updateFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'Redux/contacts/';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (items.some(item => item.name === name)) {\n      alert(`${name} already exist in contact list`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport Form from './Forms/AddContactForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"formsContainer\">\n        <Form />\n      </div>\n\n      <div className=\"contactsContainer\">\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  getContactsSuccess,\n  getContactsRequest,\n  getContactsError,\n  addContactsSuccess,\n  addContactsRequest,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  updateFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [getContactsError]: (_, { payload }) => payload.message,\n  [getContactsRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst myMiddleware = store => next => action => {\n  console.log('Моя прослойка!', action);\n\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n  myMiddleware,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\n//const store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}