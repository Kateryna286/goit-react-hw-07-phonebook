{"version":3,"sources":["Redux/contacts/contacts-actions.js","Redux/contacts/contacts-selector.js","ContactList/ContactsList.js","Filter/Filter.js","Forms/AddContactForm.js","App.js","Redux/contacts/contacts-reducer.js","Redux/store.js","index.js"],"names":["addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","updateFilter","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","ContactsList","useSelector","dispatch","useDispatch","className","map","type","onClick","actions","Filter","value","onChange","e","target","Form","useState","setName","setNumber","handleChange","event","resetForm","onSubmit","preventDefault","some","item","alert","pattern","title","required","App","createReducer","_","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aafba604.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/Add', data => ({\n  payload: {\n    id: uuidv4(),\n    name: data.name,\n    number: data.number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/Delete');\n\nexport const updateFilter = createAction('contacts/UpdateFilter');\n\n// export const fetchContactsRequest = createAction('contacts/Request'); //pending\n// export const fetchContactsSuccess = createAction('contacts/Success'); // fulfilled\n// export const fetchContactsError = createAction('contacts/Error'); //rejected\n","export const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\nimport { getVisibleContacts } from '../Redux/contacts/contacts-selector';\nimport './ContactList.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"item\">\n          <span className=\"itemText\">\n            <span className=\"itemName\">{name}:</span>\n            <span className=\"itemNum\">{number}</span>\n          </span>\n\n          <button\n            type=\"button\"\n            onClick={() => dispatch(actions.deleteContact(id))}\n            className=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\nimport { getFilter } from '../Redux/contacts/contacts-selector';\nimport './Filter.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"filter\">\n      <label>\n        <span className=\"filterText\">Filter</span>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(actions.updateFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\nimport { getItems } from '../Redux/contacts/contacts-selector';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (items.some(item => item.name === name)) {\n      alert(`${name} already exist in contact list`);\n      return;\n    }\n\n    dispatch(actions.addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport Form from './Forms/AddContactForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"formsContainer\">\n        <Form />\n      </div>\n\n      <div className=\"contactsContainer\">\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.updateFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}